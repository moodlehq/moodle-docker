#!/usr/bin/env bash
set -e

if [ ! -d "$MOODLE_DOCKER_WWWROOT" ];
then
    echo 'Error: $MOODLE_DOCKER_WWWROOT is not set or not an existing directory'
    exit 1
fi

if [ -z "$MOODLE_DOCKER_DB" ];
then
    echo 'Error: $MOODLE_DOCKER_DB is not set'
    exit 1
fi

# Nasty portable way to the directory of this script, following symlink,
# because readlink -f not on OSX. Thanks stack overflow..
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
basedir="$( cd -P "$( dirname "$SOURCE" )/../" && pwd )"
export ASSETDIR="${basedir}/assets"


dockercompose="docker-compose -f ${basedir}/base.yml"
dockercompose="${dockercompose} -f ${basedir}/service.mail.yml"

# PHP Version.
export MOODLE_DOCKER_PHP_VERSION=${MOODLE_DOCKER_PHP_VERSION:-7.2}

# Enable Traefik
if [ -n "$MOODLE_DOCKER_TRAEFIK" ];
then
    dockercompose="${dockercompose} -f ${basedir}/traefik.yml"
fi

# Database flavour
if [ "$MOODLE_DOCKER_DB" != 'pgsql' ];
then
    dockercompose="${dockercompose} -f ${basedir}/db.${MOODLE_DOCKER_DB}.yml"

fi

# Support PHP version overrides for DB..
filename="${basedir}/db.${MOODLE_DOCKER_DB}.${MOODLE_DOCKER_PHP_VERSION}.yml"
if [ -f $filename ]; then
    dockercompose="${dockercompose} -f ${filename}"
fi

# Selenium browser
if [[ ! -z "$MOODLE_DOCKER_BROWSER" ]] && [[ "$MOODLE_DOCKER_BROWSER" != "firefox" ]];
then
    dockercompose="${dockercompose} -f ${basedir}/selenium.${MOODLE_DOCKER_BROWSER}.yml"
fi

if [[ -z "$MOODLE_DOCKER_SELENIUM_VNC_PORT" ]]
then
    export MOODLE_DOCKER_SELENIUM_SUFFIX=""
else
    export MOODLE_DOCKER_SELENIUM_SUFFIX="-debug"
    dockercompose="${dockercompose} -f ${basedir}/selenium.debug.yml"
fi

# External services
if [[ ! -z "$MOODLE_DOCKER_PHPUNIT_EXTERNAL_SERVICES" ]];
then
    dockercompose="${dockercompose} -f ${basedir}/phpunit-external-services.yml"
fi

# Webserver host
export MOODLE_DOCKER_WEB_HOST=${MOODLE_DOCKER_WEB_HOST:-localhost}

# Webserver port
export MOODLE_DOCKER_WEB_PORT=${MOODLE_DOCKER_WEB_PORT:-8000}
if [[ $MOODLE_DOCKER_WEB_PORT -gt 0 ]] && [ -z "$MOODLE_DOCKER_TRAEFIK" ]
then
    dockercompose="${dockercompose} -f ${basedir}/webserver.port.yml"
fi


# Mac OS Compatbility
if [[ "$(uname)" == "Darwin" ]]; then
    # Support https://docs.docker.com/docker-for-mac/osxfs-caching/
    dockercompose="${dockercompose} -f ${basedir}/volumes-cached.yml"
fi


$dockercompose "$@"
